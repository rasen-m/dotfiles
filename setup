#!/bin/bash

################################################################################
# Reference.
################################################################################
# https://unix.stackexchange.com/questions/71253/what-should-shouldnt-go-in-zshenv-zshrc-zlogin-zprofile-zlogout
# https://ohmyz.sh

################################################################################
# Setup.
################################################################################

get_linux_distribution() {
	if [ -r /etc/os-release ]; then
			. /etc/os-release
			echo "$NAME"
	elif [ -r /etc/*-release ]; then
			grep -m 1 -E '^ID=' /etc/*-release | cut -d= -f2
	else
			echo "Unknown"
	fi
}

distribution=$(get_linux_distribution)
echo "Linux distribution: $distribution"

################################################################################
# Other System Specific Installations.
################################################################################

if [[ $(uname) == 'Linux' ]]; then
	echo "Install Linux specific installations for $distribution."

	if [[ "$distribution" == 'Amazon Linux' ]]; then
		sudo yum install expect
	else
		sudo apt install expect
	fi
elif [[ $(uname) == 'Darwin' ]]; then
		echo "Install OSX specific installations."
fi

################################################################################
# Git.
################################################################################
echo "Copying git files..."

cp git/.gitignore ~

git config --global core.excludesfile ~/.gitignore
git config --global core.editor vim
git config --global color.ui auto
git config --global user.name "Sean Su"
git config --global user.email "seansu@me.com"
git config --global help.autocorrect 20
git config --global push.default current

# Aliases
git config --global alias.st "status"
git config --global alias.co "checkout"
git config --global alias.a "add"
git config --global alias.p "pull"
git config --global alias.c "commit"
git config --global alias.d "diff --no-index"

git config --global alias.b "branch"
git config --global alias.ba "branch -a"
git config --global alias.br "branch -r"

git config --global alias.l "log"
git config --global alias.lo "log --oneline"
git config --global alias.ll "log --graph --decorate --oneline --abbrev-commit --all"

################################################################################
# Vim.
################################################################################
echo "Setting up vim..."

cp -R vim/.vim ~
cp vim/.vimrc ~

if [ ! -d $HOME/.vim/bundle ]; then
	mkdir ~/.vim/bundle
fi

if [ ! -d $HOME/.vim/bundle/Vundle.vim ]; then
	git clone https://github.com/gmarik/Vundle.vim.git ~/.vim/bundle/Vundle.vim
fi

if [ ! -d $HOME/.vimtmp ]; then
	mkdir ~/.vimtmp
fi

# https://github.com/VundleVim/Vundle.vim
vim +PluginInstall +qall

################################################################################
# Color.
################################################################################
if [[ $(uname) == 'Darwin' || $(uname) == 'Linux' ]]; then
	echo "Setting up color..."

	if [[ "$uname" == 'Darwin' ]]; then
		echo "Run 'solarized_dark_osx_setup.terminal' and set that as default settings."
	fi
fi

################################################################################
# Powerline Font.
################################################################################
if [[ $(uname) == 'Darwin' || $(uname) == 'Linux' ]]; then
	echo "Setting up font..."

	if [[ $(uname) == 'Linux' ]]; then
		if [[ "$distribution" == 'Amazon Linux' ]]; then
			FIRA_CODE_URL="https://github.com/tonsky/FiraCode/releases/download/5.2/Fira_Code_v5.2.zip"
			FONT_DIR="/tmp/fira_code_fonts"
			mkdir -p "$FONT_DIR"
			wget -O "$FONT_DIR/Fira_Code.zip" "$FIRA_CODE_URL"
			unzip "$FONT_DIR/Fira_Code.zip" -d "$FONT_DIR"
			sudo mv "$FONT_DIR/"*.ttf /usr/share/fonts/
			sudo fc-cache -f -v
			rm -rf "$FONT_DIR"
			#sudo yum install fonts-firacode
		else
			sudo apt install fonts-firacode

			if [[ "$distribution" == *"WSL"* ]]; then
				echo "On Window Linux Subsystem, the fonts got to be setup on the Window side instead."
				echo "Right-click on the WSL terminal's title-bar > Settings > ..."
				echo "Also, set the Color scheme to 'Solarized Dark'."

				echo "If the color isn't showing, check out gitbash_solarized."
			fi
		fi
	elif [[ $(uname) == 'Darwin' ]]; then
		brew tap homebrew/cask-fonts
		brew install --cask font-fira-code
		echo "$(tput setaf 2)Reminder:$(tput sgr0) Run 'Solarized Dark (Powerline).terminal' and set that as default setting."
	fi
fi

################################################################################
# Oh My Zsh.
################################################################################
if [[ $(uname) == 'Darwin' || $(uname) == 'Linux' ]]; then
	echo "Setting up Oh My Zsh..."

  if [ -d $ZSH ]; then
		if [[ $(uname) == 'Linux' ]]; then
			echo "Warning: Folder '$ZSH' already exists. Skipping it."
		elif [[ $(uname) == 'Darwin' ]]; then
			echo "$(tput setaf 3)Warning:$(tput sgr0) Folder '$ZSH' already exists. Skipping it."
		fi
	else
		# Download
		sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"
	fi

	# Spaceship theme.
	# https://github.com/spaceship-prompt/spaceship-prompt
	# https://github.com/ohmyzsh/ohmyzsh/wiki/External-themes
	# https://spaceship-prompt.sh
	if [[ $(uname) == 'Linux' ]]; then
			git clone https://github.com/spaceship-prompt/spaceship-prompt.git "$ZSH_CUSTOM/themes/spaceship-prompt" --depth=1
	elif [[ $(uname) == 'Darwin' ]]; then
			brew install spaceship
	fi

	# Custom files.
	cp oh-my-zsh/spaceshiprc.zsh ~/.spaceshiprc.zsh
	cp oh-my-zsh/aliases.zsh ~/.oh-my-zsh/custom
	cp oh-my-zsh/paths.zsh ~/.oh-my-zsh/custom

echo "Do you need Amazon aliases? (y/n)"
read answer

if [[ "$answer" == "y" || "$answer" == "Y" ]]; then
		cp oh-my-zsh/amazon.zsh ~/.oh-my-zsh/custom
fi

	# Setup Spaceship prompt.
	if [[ $(uname) == 'Linux' ]]; then
		ln -s "$ZSH_CUSTOM/themes/spaceship-prompt/spaceship.zsh-theme" "$ZSH_CUSTOM/themes/spaceship.zsh-theme"
		echo "ZSH_THEME=\"spaceship\"" >> ~/.zshrc
		echo "source ~/.oh-my-zsh/custom/themes/spaceship.zsh-theme" >> ~/.zshrc
	elif [[ $(uname) == 'Darwin' ]]; then
		echo "source $(brew --prefix)/opt/spaceship/spaceship.zsh" >> ~/.zshrc
	fi
fi

echo "Close this terminal and open an new one."
